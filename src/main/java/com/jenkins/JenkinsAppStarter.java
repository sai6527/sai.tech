/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.jenkins;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.view.InternalResourceViewResolver;
import org.springframework.web.servlet.view.JstlView;


@SpringBootApplication
@EnableWebMvc
@Configuration
@ComponentScan(basePackages= {"com.jenkins"})
@EnableAutoConfiguration   
public class JenkinsAppStarter implements WebMvcConfigurer{
   
	@Value("${spring.mvc.view.prefix}")
    private String prefix;

    @Value("${spring.mvc.view.suffix}")
    private String suffix;
	
	
	public static void main(String[] args) {
		//System.setProperty("spring.config.name", "config");
				SpringApplication.run(JenkinsAppStarter.class, args);
	}

	 @Bean
	    InternalResourceViewResolver jspViewResolver() {
	        final InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
	        return viewResolver;
	    }
	
    @Override
    public void configureViewResolvers(ViewResolverRegistry registry) {
        InternalResourceViewResolver resolver = new InternalResourceViewResolver();
        resolver.setPrefix(prefix);
        resolver.setSuffix(suffix);
        resolver.setViewClass(JstlView.class);
        registry.viewResolver(resolver);
    }
	
	
}
